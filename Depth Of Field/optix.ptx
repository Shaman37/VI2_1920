//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.const .align 8 .b8 optixLaunchParams[88];

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<120>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<34>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd10, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd11, %r1;
	shl.b64 	%rd12, %rd11, 32;
	cvt.u64.u32	%rd13, %r2;
	or.b64  	%rd2, %rd12, %rd13;
	// inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd14, [%rd8];
	mul.wide.s32 	%rd15, %r3, 12;
	add.s64 	%rd16, %rd14, %rd15;
	ld.u32 	%r13, [%rd16];
	ld.u32 	%r14, [%rd16+4];
	ld.u32 	%r15, [%rd16+8];
	// inline asm
	call (%f4, %f5), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.ftz.f32 	%f23, %f22, %f4;
	sub.ftz.f32 	%f24, %f23, %f5;
	cvt.u64.u32	%rd4, %r13;
	ld.u64 	%rd17, [%rd8+16];
	mul.wide.u32 	%rd18, %r13, 16;
	add.s64 	%rd19, %rd17, %rd18;
	ld.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd19];
	mov.u32 	%r7, 0;
	mov.u32 	%r10, 1;
	mov.u32 	%r9, 2;
	cvt.u64.u32	%rd5, %r14;
	mul.wide.u32 	%rd20, %r14, 16;
	add.s64 	%rd21, %rd17, %rd20;
	ld.v4.f32 	{%f32, %f33, %f34, %f35}, [%rd21];
	mul.ftz.f32 	%f39, %f4, %f32;
	mul.ftz.f32 	%f40, %f4, %f33;
	mul.ftz.f32 	%f41, %f4, %f34;
	fma.rn.ftz.f32 	%f42, %f25, %f24, %f39;
	fma.rn.ftz.f32 	%f43, %f26, %f24, %f40;
	fma.rn.ftz.f32 	%f44, %f27, %f24, %f41;
	cvt.u64.u32	%rd6, %r15;
	mul.wide.u32 	%rd22, %r15, 16;
	add.s64 	%rd23, %rd17, %rd22;
	ld.v4.f32 	{%f45, %f46, %f47, %f48}, [%rd23];
	fma.rn.ftz.f32 	%f52, %f5, %f45, %f42;
	fma.rn.ftz.f32 	%f53, %f5, %f46, %f43;
	fma.rn.ftz.f32 	%f54, %f5, %f47, %f44;
	// inline asm
	call (%f6), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f8), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f9), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f10), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f11), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f12), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f13, %f9, %f10, %f6;
	fma.rn.ftz.f32 	%f14, %f9, %f11, %f7;
	fma.rn.ftz.f32 	%f15, %f9, %f12, %f8;
	ld.const.u64 	%rd24, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd25, %rd24;
	ld.global.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd25];
	sub.ftz.f32 	%f62, %f55, %f13;
	sub.ftz.f32 	%f63, %f56, %f14;
	sub.ftz.f32 	%f64, %f57, %f15;
	mul.ftz.f32 	%f65, %f63, %f63;
	fma.rn.ftz.f32 	%f66, %f62, %f62, %f65;
	fma.rn.ftz.f32 	%f67, %f64, %f64, %f66;
	sqrt.approx.ftz.f32 	%f68, %f67;
	add.ftz.f32 	%f20, %f68, 0fBC23D70A;
	rsqrt.approx.ftz.f32 	%f69, %f67;
	mul.ftz.f32 	%f16, %f62, %f69;
	mul.ftz.f32 	%f17, %f63, %f69;
	mul.ftz.f32 	%f18, %f64, %f69;
	mul.ftz.f32 	%f70, %f53, %f53;
	fma.rn.ftz.f32 	%f71, %f52, %f52, %f70;
	fma.rn.ftz.f32 	%f72, %f54, %f54, %f71;
	rsqrt.approx.ftz.f32 	%f73, %f72;
	mul.ftz.f32 	%f74, %f52, %f73;
	mul.ftz.f32 	%f75, %f53, %f73;
	mul.ftz.f32 	%f76, %f54, %f73;
	mul.ftz.f32 	%f77, %f17, %f75;
	fma.rn.ftz.f32 	%f78, %f16, %f74, %f77;
	fma.rn.ftz.f32 	%f79, %f18, %f76, %f78;
	mov.f32 	%f21, 0f00000000;
	max.ftz.f32 	%f3, %f79, %f21;
	mov.u32 	%r16, 1065353216;
	st.local.u32 	[%rd1], %r16;
	shr.u64 	%rd26, %rd10, 32;
	cvt.u32.u64	%r11, %rd26;
	cvt.u32.u64	%r12, %rd10;
	ld.const.u64 	%rd9, [optixLaunchParams+72];
	mov.u32 	%r6, 255;
	mov.f32 	%f19, 0f3A83126F;
	// inline asm
	call (%r4, %r5), _optix_trace_2, (%rd9, %f13, %f14, %f15, %f16, %f17, %f18, %f19, %f20, %f21, %r6, %r7, %r10, %r9, %r10, %r11, %r12);
	// inline asm
	ld.u32 	%r17, [%rd8+48];
	setp.eq.s32	%p1, %r17, 0;
	@%p1 bra 	BB0_3;

	ld.u64 	%rd7, [%rd8+24];
	setp.eq.s64	%p2, %rd7, 0;
	@%p2 bra 	BB0_3;

	shl.b64 	%rd27, %rd4, 4;
	add.s64 	%rd28, %rd7, %rd27;
	ld.v2.f32 	{%f80, %f81}, [%rd28];
	shl.b64 	%rd29, %rd5, 4;
	add.s64 	%rd30, %rd7, %rd29;
	ld.v2.f32 	{%f87, %f88}, [%rd30];
	mul.ftz.f32 	%f91, %f4, %f87;
	mul.ftz.f32 	%f92, %f4, %f88;
	fma.rn.ftz.f32 	%f93, %f24, %f80, %f91;
	fma.rn.ftz.f32 	%f94, %f24, %f81, %f92;
	shl.b64 	%rd31, %rd6, 4;
	add.s64 	%rd32, %rd7, %rd31;
	ld.v2.f32 	{%f95, %f96}, [%rd32];
	fma.rn.ftz.f32 	%f99, %f5, %f95, %f93;
	fma.rn.ftz.f32 	%f100, %f5, %f96, %f94;
	ld.u64 	%rd33, [%rd8+56];
	tex.2d.v4.f32.f32	{%f101, %f102, %f103, %f104}, [%rd33, {%f99, %f100}];
	ld.local.f32 	%f105, [%rd1];
	mul.ftz.f32 	%f106, %f3, %f105;
	cvt.ftz.f64.f32	%fd1, %f106;
	add.f64 	%fd2, %fd1, 0d0000000000000000;
	mov.f64 	%fd3, 0d3FF0000000000000;
	min.f64 	%fd4, %fd2, %fd3;
	cvt.rn.ftz.f32.f64	%f107, %fd4;
	mul.ftz.f32 	%f108, %f107, %f101;
	mul.ftz.f32 	%f109, %f107, %f102;
	mul.ftz.f32 	%f110, %f107, %f103;
	st.f32 	[%rd2], %f108;
	st.f32 	[%rd2+4], %f109;
	st.f32 	[%rd2+8], %f110;
	bra.uni 	BB0_4;

BB0_3:
	ld.local.f32 	%f111, [%rd1];
	mul.ftz.f32 	%f112, %f3, %f111;
	cvt.ftz.f64.f32	%fd5, %f112;
	add.f64 	%fd6, %fd5, 0d0000000000000000;
	mov.f64 	%fd7, 0d3FF0000000000000;
	min.f64 	%fd8, %fd6, %fd7;
	cvt.rn.ftz.f32.f64	%f113, %fd8;
	ld.f32 	%f114, [%rd8+64];
	mul.ftz.f32 	%f115, %f114, %f113;
	ld.f32 	%f116, [%rd8+68];
	mul.ftz.f32 	%f117, %f113, %f116;
	ld.f32 	%f118, [%rd8+72];
	mul.ftz.f32 	%f119, %f113, %f118;
	st.f32 	[%rd2], %f115;
	st.f32 	[%rd2+4], %f117;
	st.f32 	[%rd2+8], %f119;

BB0_4:
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__closesthit__light
.visible .entry __closesthit__light(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 1065353216;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__light
.visible .entry __anyhit__light(

)
{



	ret;
}

	// .globl	__miss__light
.visible .entry __miss__light(

)
{



	ret;
}

	// .globl	__closesthit__light_shadow
.visible .entry __closesthit__light_shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__anyhit__light_shadow
.visible .entry __anyhit__light_shadow(

)
{



	ret;
}

	// .globl	__miss__light_shadow
.visible .entry __miss__light_shadow(

)
{



	ret;
}

	// .globl	__closesthit__phong_metal
.visible .entry __closesthit__phong_metal(

)
{
	.local .align 4 .b8 	__local_depot12[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<74>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot12;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SP, 0;
	add.u64 	%rd4, %SPL, 0;
	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd5, [%rd1];
	mul.wide.s32 	%rd6, %r1, 12;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u32 	%r13, [%rd7];
	ld.u32 	%r14, [%rd7+4];
	ld.u32 	%r15, [%rd7+8];
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f19, 0f3F800000;
	sub.ftz.f32 	%f20, %f19, %f1;
	sub.ftz.f32 	%f21, %f20, %f2;
	ld.u64 	%rd8, [%rd1+16];
	mul.wide.u32 	%rd9, %r13, 16;
	add.s64 	%rd10, %rd8, %rd9;
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd10];
	mov.u32 	%r8, 0;
	mov.u32 	%r7, 2;
	mul.wide.u32 	%rd11, %r14, 16;
	add.s64 	%rd12, %rd8, %rd11;
	ld.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd12];
	mul.ftz.f32 	%f36, %f1, %f29;
	mul.ftz.f32 	%f37, %f1, %f30;
	mul.ftz.f32 	%f38, %f1, %f31;
	fma.rn.ftz.f32 	%f39, %f22, %f21, %f36;
	fma.rn.ftz.f32 	%f40, %f23, %f21, %f37;
	fma.rn.ftz.f32 	%f41, %f24, %f21, %f38;
	mul.wide.u32 	%rd13, %r15, 16;
	add.s64 	%rd14, %rd8, %rd13;
	ld.v4.f32 	{%f42, %f43, %f44, %f45}, [%rd14];
	fma.rn.ftz.f32 	%f49, %f2, %f42, %f39;
	fma.rn.ftz.f32 	%f50, %f2, %f43, %f40;
	fma.rn.ftz.f32 	%f51, %f2, %f44, %f41;
	mul.ftz.f32 	%f52, %f50, %f50;
	fma.rn.ftz.f32 	%f53, %f49, %f49, %f52;
	fma.rn.ftz.f32 	%f54, %f51, %f51, %f53;
	rsqrt.approx.ftz.f32 	%f55, %f54;
	mul.ftz.f32 	%f56, %f49, %f55;
	mul.ftz.f32 	%f57, %f50, %f55;
	mul.ftz.f32 	%f58, %f51, %f55;
	mov.u64 	%rd15, 1065353216;
	st.local.u32 	[%rd4+4], %rd15;
	st.local.u32 	[%rd4], %rd15;
	mov.u32 	%r16, 1065353216;
	st.local.u32 	[%rd4+8], %r16;
	shr.u64 	%rd16, %rd3, 32;
	cvt.u32.u64	%r9, %rd16;
	cvt.u32.u64	%r10, %rd3;
	// inline asm
	call (%f3), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f8), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f9), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f10, %f6, %f7, %f3;
	fma.rn.ftz.f32 	%f11, %f6, %f8, %f4;
	fma.rn.ftz.f32 	%f12, %f6, %f9, %f5;
	add.ftz.f32 	%f59, %f56, %f56;
	add.ftz.f32 	%f60, %f57, %f57;
	add.ftz.f32 	%f61, %f58, %f58;
	mul.ftz.f32 	%f62, %f57, %f8;
	fma.rn.ftz.f32 	%f63, %f56, %f7, %f62;
	fma.rn.ftz.f32 	%f64, %f58, %f9, %f63;
	mul.ftz.f32 	%f65, %f59, %f64;
	mul.ftz.f32 	%f66, %f60, %f64;
	mul.ftz.f32 	%f67, %f61, %f64;
	sub.ftz.f32 	%f13, %f7, %f65;
	sub.ftz.f32 	%f14, %f8, %f66;
	sub.ftz.f32 	%f15, %f9, %f67;
	ld.const.u64 	%rd2, [optixLaunchParams+72];
	mov.u32 	%r4, 255;
	mov.f32 	%f16, 0f3D23D70A;
	mov.f32 	%f17, 0f60AD78EC;
	mov.f32 	%f18, 0f00000000;
	// inline asm
	call (%r2, %r3), _optix_trace_2, (%rd2, %f10, %f11, %f12, %f13, %f14, %f15, %f16, %f17, %f18, %r4, %r8, %r8, %r7, %r8, %r9, %r10);
	// inline asm
	// inline asm
	call (%r11), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r12), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd17, %r11;
	shl.b64 	%rd18, %rd17, 32;
	cvt.u64.u32	%rd19, %r12;
	or.b64  	%rd20, %rd18, %rd19;
	ld.local.f32 	%f68, [%rd4];
	mul.ftz.f32 	%f69, %f68, 0f3F4CCCCD;
	ld.local.f32 	%f70, [%rd4+4];
	mul.ftz.f32 	%f71, %f70, 0f3F4CCCCD;
	ld.local.f32 	%f72, [%rd4+8];
	mul.ftz.f32 	%f73, %f72, 0f3F4CCCCD;
	st.f32 	[%rd20], %f69;
	st.f32 	[%rd20+4], %f71;
	st.f32 	[%rd20+8], %f73;
	ret;
}

	// .globl	__closesthit__phong_glass
.visible .entry __closesthit__phong_glass(

)
{
	.local .align 4 .b8 	__local_depot13[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .f32 	%f<163>;
	.reg .b32 	%r<27>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<30>;


	mov.u64 	%SPL, __local_depot13;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%rd4), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd5, [%rd4];
	mul.wide.s32 	%rd6, %r1, 12;
	add.s64 	%rd7, %rd5, %rd6;
	ld.u32 	%r2, [%rd7];
	ld.u32 	%r3, [%rd7+4];
	ld.u32 	%r4, [%rd7+8];
	// inline asm
	call (%f31, %f32), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f36, 0f3F800000;
	sub.ftz.f32 	%f37, %f36, %f31;
	sub.ftz.f32 	%f38, %f37, %f32;
	ld.u64 	%rd8, [%rd4+16];
	mul.wide.u32 	%rd9, %r2, 16;
	add.s64 	%rd10, %rd8, %rd9;
	ld.v4.f32 	{%f39, %f40, %f41, %f42}, [%rd10];
	mul.wide.u32 	%rd11, %r3, 16;
	add.s64 	%rd12, %rd8, %rd11;
	ld.v4.f32 	{%f46, %f47, %f48, %f49}, [%rd12];
	mul.ftz.f32 	%f53, %f31, %f46;
	mul.ftz.f32 	%f54, %f31, %f47;
	mul.ftz.f32 	%f55, %f31, %f48;
	fma.rn.ftz.f32 	%f56, %f39, %f38, %f53;
	fma.rn.ftz.f32 	%f57, %f40, %f38, %f54;
	fma.rn.ftz.f32 	%f58, %f41, %f38, %f55;
	mul.wide.u32 	%rd13, %r4, 16;
	add.s64 	%rd14, %rd8, %rd13;
	ld.v4.f32 	{%f59, %f60, %f61, %f62}, [%rd14];
	fma.rn.ftz.f32 	%f66, %f32, %f59, %f56;
	fma.rn.ftz.f32 	%f67, %f32, %f60, %f57;
	fma.rn.ftz.f32 	%f68, %f32, %f61, %f58;
	mul.ftz.f32 	%f69, %f67, %f67;
	fma.rn.ftz.f32 	%f70, %f66, %f66, %f69;
	fma.rn.ftz.f32 	%f71, %f68, %f68, %f70;
	rsqrt.approx.ftz.f32 	%f72, %f71;
	mul.ftz.f32 	%f1, %f66, %f72;
	mul.ftz.f32 	%f2, %f67, %f72;
	mul.ftz.f32 	%f3, %f68, %f72;
	// inline asm
	call (%f33), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f34), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f35), _optix_get_world_ray_direction_z, ();
	// inline asm
	mul.ftz.f32 	%f7, %f1, %f33;
	mul.ftz.f32 	%f8, %f2, %f34;
	add.ftz.f32 	%f73, %f7, %f8;
	mul.ftz.f32 	%f9, %f3, %f35;
	add.ftz.f32 	%f10, %f9, %f73;
	setp.lt.ftz.f32	%p1, %f10, 0f00000000;
	@%p1 bra 	BB13_4;
	bra.uni 	BB13_1;

BB13_4:
	neg.ftz.f32 	%f95, %f8;
	sub.ftz.f32 	%f96, %f95, %f7;
	sub.ftz.f32 	%f162, %f96, %f9;
	mul.ftz.f32 	%f97, %f10, %f10;
	cvt.ftz.f64.f32	%fd5, %f97;
	mov.f64 	%fd6, 0d3FF0000000000000;
	sub.f64 	%fd7, %fd6, %fd5;
	fma.rn.f64 	%fd8, %fd7, 0dBFDBE0DF00000000, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64	%f20, %fd8;
	setp.lt.ftz.f32	%p3, %f20, 0f00000000;
	mov.f32 	%f159, 0f00000000;
	@%p3 bra 	BB13_5;
	bra.uni 	BB13_6;

BB13_5:
	mov.f32 	%f160, %f159;
	mov.f32 	%f161, %f159;
	bra.uni 	BB13_7;

BB13_1:
	neg.ftz.f32 	%f11, %f1;
	mul.ftz.f32 	%f78, %f33, %f11;
	neg.ftz.f32 	%f12, %f2;
	mul.ftz.f32 	%f79, %f34, %f2;
	sub.ftz.f32 	%f80, %f78, %f79;
	neg.ftz.f32 	%f13, %f3;
	mul.ftz.f32 	%f81, %f35, %f3;
	sub.ftz.f32 	%f14, %f80, %f81;
	mul.ftz.f32 	%f82, %f14, %f14;
	cvt.ftz.f64.f32	%fd1, %f82;
	mov.f64 	%fd2, 0d3FF0000000000000;
	sub.f64 	%fd3, %fd2, %fd1;
	fma.rn.f64 	%fd4, %fd3, 0dC002000000000000, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64	%f15, %fd4;
	setp.lt.ftz.f32	%p2, %f15, 0f00000000;
	mov.f32 	%f162, 0f00000000;
	@%p2 bra 	BB13_2;
	bra.uni 	BB13_3;

BB13_2:
	mov.f32 	%f159, %f162;
	mov.f32 	%f160, %f162;
	mov.f32 	%f161, %f162;
	bra.uni 	BB13_7;

BB13_6:
	mul.ftz.f32 	%f98, %f33, 0f3F28F5C3;
	sqrt.approx.ftz.f32 	%f99, %f20;
	fma.rn.ftz.f32 	%f100, %f10, 0f3F28F5C3, %f99;
	mul.ftz.f32 	%f101, %f1, %f100;
	mul.ftz.f32 	%f102, %f2, %f100;
	mul.ftz.f32 	%f103, %f3, %f100;
	sub.ftz.f32 	%f159, %f98, %f101;
	mul.ftz.f32 	%f104, %f34, 0f3F28F5C3;
	sub.ftz.f32 	%f160, %f104, %f102;
	mul.ftz.f32 	%f105, %f35, 0f3F28F5C3;
	sub.ftz.f32 	%f161, %f105, %f103;
	bra.uni 	BB13_7;

BB13_3:
	mul.ftz.f32 	%f84, %f33, 0f3FC00000;
	sqrt.approx.ftz.f32 	%f85, %f15;
	fma.rn.ftz.f32 	%f86, %f14, 0f3FC00000, %f85;
	mul.ftz.f32 	%f87, %f86, %f11;
	mul.ftz.f32 	%f88, %f86, %f12;
	mul.ftz.f32 	%f89, %f86, %f13;
	sub.ftz.f32 	%f159, %f84, %f87;
	mul.ftz.f32 	%f90, %f34, 0f3FC00000;
	sub.ftz.f32 	%f160, %f90, %f88;
	mul.ftz.f32 	%f91, %f35, 0f3FC00000;
	sub.ftz.f32 	%f161, %f91, %f89;

BB13_7:
	// inline asm
	call (%f106), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f107), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f108), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f109), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.ftz.f32 	%f28, %f33, %f109, %f106;
	fma.rn.ftz.f32 	%f29, %f34, %f109, %f107;
	fma.rn.ftz.f32 	%f30, %f35, %f109, %f108;
	add.u64 	%rd15, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u64 	%rd16, 0;
	st.local.u32 	[%rd1+4], %rd16;
	st.local.u32 	[%rd1], %rd16;
	mov.u32 	%r5, 0;
	st.local.u32 	[%rd1+8], %r5;
	mul.ftz.f32 	%f110, %f160, %f160;
	fma.rn.ftz.f32 	%f111, %f159, %f159, %f110;
	fma.rn.ftz.f32 	%f112, %f161, %f161, %f111;
	sqrt.approx.ftz.f32 	%f113, %f112;
	setp.leu.ftz.f32	%p4, %f113, 0f00000000;
	@%p4 bra 	BB13_9;

	shr.u64 	%rd19, %rd15, 32;
	cvt.u32.u64	%r14, %rd15;
	cvt.u32.u64	%r13, %rd19;
	ld.const.u64 	%rd17, [optixLaunchParams+72];
	mov.u32 	%r8, 255;
	mov.u32 	%r11, 2;
	mov.f32 	%f120, 0f3727C5AC;
	mov.f32 	%f121, 0f60AD78EC;
	mov.f32 	%f122, 0f00000000;
	// inline asm
	call (%r6, %r7), _optix_trace_2, (%rd17, %f28, %f29, %f30, %f159, %f160, %f161, %f120, %f121, %f122, %r8, %r5, %r5, %r11, %r5, %r13, %r14);
	// inline asm

BB13_9:
	// inline asm
	call (%r15), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r16), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd20, %r15;
	shl.b64 	%rd21, %rd20, 32;
	cvt.u64.u32	%rd22, %r16;
	or.b64  	%rd2, %rd21, %rd22;
	add.u64 	%rd23, %SP, 12;
	add.u64 	%rd3, %SPL, 12;
	st.local.u32 	[%rd3+4], %rd16;
	st.local.u32 	[%rd3], %rd16;
	st.local.u32 	[%rd3+8], %r5;
	setp.gt.ftz.f32	%p5, %f162, 0f00000000;
	@%p5 bra 	BB13_11;
	bra.uni 	BB13_10;

BB13_11:
	add.ftz.f32 	%f133, %f1, %f1;
	mul.ftz.f32 	%f134, %f133, %f10;
	add.ftz.f32 	%f135, %f2, %f2;
	mul.ftz.f32 	%f136, %f135, %f10;
	add.ftz.f32 	%f137, %f3, %f3;
	mul.ftz.f32 	%f138, %f137, %f10;
	sub.ftz.f32 	%f127, %f33, %f134;
	sub.ftz.f32 	%f128, %f34, %f136;
	sub.ftz.f32 	%f129, %f35, %f138;
	shr.u64 	%rd29, %rd23, 32;
	cvt.u32.u64	%r25, %rd29;
	cvt.u32.u64	%r26, %rd23;
	ld.const.u64 	%rd27, [optixLaunchParams+72];
	mov.u32 	%r20, 255;
	mov.u32 	%r23, 2;
	mov.f32 	%f130, 0f3727C5AC;
	mov.f32 	%f131, 0f60AD78EC;
	mov.f32 	%f132, 0f00000000;
	// inline asm
	call (%r18, %r19), _optix_trace_2, (%rd27, %f28, %f29, %f30, %f127, %f128, %f129, %f130, %f131, %f132, %r20, %r5, %r5, %r23, %r5, %r25, %r26);
	// inline asm
	sub.ftz.f32 	%f140, %f36, %f162;
	lg2.approx.ftz.f32 	%f141, %f140;
	mul.ftz.f32 	%f142, %f141, 0f40A00000;
	ex2.approx.ftz.f32 	%f143, %f142;
	sub.ftz.f32 	%f144, %f36, 0f3D23D70B;
	fma.rn.ftz.f32 	%f145, %f143, %f144, 0f3D23D70B;
	sub.ftz.f32 	%f146, %f36, %f145;
	ld.local.f32 	%f147, [%rd1];
	ld.local.f32 	%f148, [%rd1+4];
	ld.local.f32 	%f149, [%rd1+8];
	ld.local.f32 	%f150, [%rd3];
	mul.ftz.f32 	%f151, %f145, %f150;
	ld.local.f32 	%f152, [%rd3+4];
	mul.ftz.f32 	%f153, %f145, %f152;
	ld.local.f32 	%f154, [%rd3+8];
	mul.ftz.f32 	%f155, %f145, %f154;
	fma.rn.ftz.f32 	%f156, %f147, %f146, %f151;
	fma.rn.ftz.f32 	%f157, %f148, %f146, %f153;
	fma.rn.ftz.f32 	%f158, %f149, %f146, %f155;
	st.f32 	[%rd2], %f156;
	st.f32 	[%rd2+4], %f157;
	st.f32 	[%rd2+8], %f158;
	bra.uni 	BB13_12;

BB13_10:
	ld.local.u32 	%rd25, [%rd1];
	ld.local.f32 	%f123, [%rd1+8];
	ld.local.u32 	%rd26, [%rd1+4];
	st.u32 	[%rd2+4], %rd26;
	st.u32 	[%rd2], %rd25;
	st.f32 	[%rd2+8], %f123;

BB13_12:
	ret;
}

	// .globl	__anyhit__phong_glass
.visible .entry __anyhit__phong_glass(

)
{



	ret;
}

	// .globl	__miss__phong_glass
.visible .entry __miss__phong_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__shadow_glass
.visible .entry __closesthit__shadow_glass(

)
{
	.local .align 4 .b8 	__local_depot16[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot16;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	mov.u32 	%r12, 1065353216;
	st.local.u32 	[%rd3], %r12;
	shr.u64 	%rd4, %rd2, 32;
	cvt.u32.u64	%r8, %rd4;
	cvt.u32.u64	%r9, %rd2;
	// inline asm
	call (%f1), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f2), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f3), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f8, %f4, %f5, %f1;
	fma.rn.ftz.f32 	%f9, %f4, %f6, %f2;
	fma.rn.ftz.f32 	%f10, %f4, %f7, %f3;
	ld.const.u64 	%rd1, [optixLaunchParams+72];
	mov.u32 	%r3, 255;
	mov.u32 	%r4, 0;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 1;
	mov.f32 	%f14, 0f3A83126F;
	mov.f32 	%f15, 0f60AD78EC;
	mov.f32 	%f16, 0f00000000;
	// inline asm
	call (%r1, %r2), _optix_trace_2, (%rd1, %f8, %f9, %f10, %f5, %f6, %f7, %f14, %f15, %f16, %r3, %r4, %r7, %r6, %r7, %r8, %r9);
	// inline asm
	// inline asm
	call (%r10), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r11), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd5, %r10;
	shl.b64 	%rd6, %rd5, 32;
	cvt.u64.u32	%rd7, %r11;
	or.b64  	%rd8, %rd6, %rd7;
	ld.local.f32 	%f17, [%rd3];
	mul.ftz.f32 	%f18, %f17, 0f3F733333;
	st.f32 	[%rd8], %f18;
	ret;
}

	// .globl	__anyhit__shadow_glass
.visible .entry __anyhit__shadow_glass(

)
{



	ret;
}

	// .globl	__miss__shadow_glass
.visible .entry __miss__shadow_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 1065353216;
	st.u32 	[%rd4], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 4 .b8 	__local_depot19[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<181>;
	.reg .b32 	%r<109>;
	.reg .f64 	%fd<16>;
	.reg .b64 	%rd<20>;


	mov.u64 	%SPL, __local_depot19;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	// inline asm
	call (%r9), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r10), _optix_get_launch_index_y, ();
	// inline asm
	mov.u64 	%rd6, 1065353216;
	st.local.u32 	[%rd1+4], %rd6;
	st.local.u32 	[%rd1], %rd6;
	mov.u32 	%r15, 1065353216;
	st.local.u32 	[%rd1+8], %r15;
	cvt.rn.f32.s32	%f55, %r9;
	add.ftz.f32 	%f56, %f55, 0f3F000000;
	cvt.rn.f32.s32	%f57, %r10;
	add.ftz.f32 	%f58, %f57, 0f3F000000;
	// inline asm
	call (%r12), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r13), _optix_get_launch_dimension_y, ();
	// inline asm
	cvt.rn.f32.u32	%f59, %r12;
	cvt.rn.f32.u32	%f60, %r13;
	div.approx.ftz.f32 	%f61, %f56, %f59;
	div.approx.ftz.f32 	%f62, %f58, %f60;
	fma.rn.ftz.f32 	%f63, %f61, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f64, %f62, 0f40000000, 0fBF800000;
	ld.const.v2.f32 	{%f65, %f66}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f67, %f68}, [optixLaunchParams+56];
	ld.const.f32 	%f5, [optixLaunchParams+36];
	fma.rn.ftz.f32 	%f69, %f65, %f63, %f5;
	ld.const.v2.f32 	{%f70, %f71}, [optixLaunchParams+40];
	fma.rn.ftz.f32 	%f72, %f63, %f66, %f70;
	fma.rn.ftz.f32 	%f73, %f63, %f67, %f71;
	ld.const.v2.f32 	{%f74, %f75}, [optixLaunchParams+64];
	fma.rn.ftz.f32 	%f76, %f64, %f68, %f69;
	fma.rn.ftz.f32 	%f77, %f64, %f74, %f72;
	fma.rn.ftz.f32 	%f78, %f64, %f75, %f73;
	mul.ftz.f32 	%f79, %f77, %f77;
	fma.rn.ftz.f32 	%f80, %f76, %f76, %f79;
	fma.rn.ftz.f32 	%f81, %f78, %f78, %f80;
	rsqrt.approx.ftz.f32 	%f82, %f81;
	mul.ftz.f32 	%f12, %f76, %f82;
	mul.ftz.f32 	%f13, %f77, %f82;
	mul.ftz.f32 	%f14, %f78, %f82;
	ld.const.u32 	%r16, [optixLaunchParams+16];
	cvt.rn.f32.s32	%f15, %r16;
	ld.const.u64 	%rd7, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd8, %rd7;
	add.s64 	%rd2, %rd8, 20;
	ld.global.f32 	%f16, [%rd8+20];
	setp.eq.ftz.f32	%p1, %f16, 0f00000000;
	@%p1 bra 	BB19_11;
	bra.uni 	BB19_1;

BB19_11:
	shr.u64 	%rd13, %rd5, 32;
	cvt.u32.u64	%r96, %rd13;
	cvt.u32.u64	%r97, %rd5;
	ld.const.u64 	%rd11, [optixLaunchParams+72];
	ld.global.f32 	%f155, [%rd2+4];
	ld.const.v2.f32 	{%f156, %f157}, [optixLaunchParams+24];
	mov.u32 	%r95, 0;
	fma.rn.ftz.f32 	%f146, %f155, %f5, %f156;
	fma.rn.ftz.f32 	%f147, %f155, %f70, %f157;
	ld.const.f32 	%f160, [optixLaunchParams+32];
	fma.rn.ftz.f32 	%f148, %f155, %f71, %f160;
	mov.u32 	%r91, 255;
	mov.u32 	%r94, 2;
	mov.f32 	%f153, 0f60AD78EC;
	mov.f32 	%f154, 0f00000000;
	// inline asm
	call (%r89, %r90), _optix_trace_2, (%rd11, %f146, %f147, %f148, %f12, %f13, %f14, %f154, %f153, %f154, %r91, %r95, %r95, %r94, %r95, %r96, %r97);
	// inline asm
	ld.local.f32 	%f178, [%rd1];
	ld.local.f32 	%f179, [%rd1+4];
	ld.local.f32 	%f180, [%rd1+8];
	bra.uni 	BB19_12;

BB19_1:
	mul.ftz.f32 	%f86, %f13, %f70;
	fma.rn.ftz.f32 	%f87, %f12, %f5, %f86;
	fma.rn.ftz.f32 	%f88, %f14, %f71, %f87;
	ld.global.f32 	%f89, [%rd2+-4];
	div.approx.ftz.f32 	%f90, %f89, %f88;
	ld.const.v2.f32 	{%f91, %f92}, [optixLaunchParams+24];
	fma.rn.ftz.f32 	%f19, %f12, %f90, %f91;
	fma.rn.ftz.f32 	%f20, %f13, %f90, %f92;
	ld.const.f32 	%f21, [optixLaunchParams+32];
	fma.rn.ftz.f32 	%f22, %f14, %f90, %f21;
	mov.f32 	%f178, 0f00000000;
	setp.leu.ftz.f32	%p2, %f15, 0f00000000;
	mov.f32 	%f179, %f178;
	mov.f32 	%f180, %f178;
	@%p2 bra 	BB19_12;

	ld.const.u64 	%rd4, [optixLaunchParams+72];
	mul.ftz.f32 	%f23, %f15, %f15;
	mov.f32 	%f96, 0f00000000;
	mov.u32 	%r17, 0;
	mov.f32 	%f166, %f96;
	mov.u32 	%r107, %r17;
	mov.f32 	%f180, %f96;
	mov.f32 	%f179, %f96;
	mov.f32 	%f178, %f96;

BB19_3:
	mul.ftz.f32 	%f28, %f15, %f166;
	cvt.u16.u32	%rs1, %r107;
	and.b16  	%rs2, %rs1, 255;
	cvt.rn.f64.u16	%fd1, %rs2;
	add.f64 	%fd2, %fd1, 0d3FE0000000000000;
	cvt.ftz.f64.f32	%fd3, %f15;
	div.rn.f64 	%fd4, %fd2, %fd3;
	add.f64 	%fd5, %fd4, 0d0000000000000000;
	cvt.rn.ftz.f32.f64	%f29, %fd5;
	mov.f32 	%f170, %f96;
	mov.u32 	%r108, %r17;

BB19_4:
	add.ftz.f32 	%f100, %f28, %f170;
	cvt.rzi.ftz.u32.f32	%r19, %f100;
	shl.b32 	%r20, %r19, 4;
	add.s32 	%r21, %r20, -1556008596;
	add.s32 	%r22, %r19, -1640531527;
	shr.u32 	%r23, %r19, 5;
	add.s32 	%r24, %r23, -939442524;
	xor.b32  	%r25, %r21, %r22;
	xor.b32  	%r26, %r25, %r24;
	mad.lo.s32 	%r27, %r12, %r9, %r10;
	add.s32 	%r28, %r27, %r26;
	shl.b32 	%r29, %r28, 4;
	add.s32 	%r30, %r29, -1383041155;
	add.s32 	%r31, %r28, -1640531527;
	xor.b32  	%r32, %r30, %r31;
	shr.u32 	%r33, %r28, 5;
	add.s32 	%r34, %r33, 2123724318;
	xor.b32  	%r35, %r32, %r34;
	add.s32 	%r36, %r35, %r19;
	shl.b32 	%r37, %r36, 4;
	add.s32 	%r38, %r37, -1556008596;
	add.s32 	%r39, %r36, 1013904242;
	shr.u32 	%r40, %r36, 5;
	add.s32 	%r41, %r40, -939442524;
	xor.b32  	%r42, %r38, %r39;
	xor.b32  	%r43, %r42, %r41;
	add.s32 	%r44, %r43, %r28;
	shl.b32 	%r45, %r44, 4;
	add.s32 	%r46, %r45, -1383041155;
	add.s32 	%r47, %r44, 1013904242;
	xor.b32  	%r48, %r46, %r47;
	shr.u32 	%r49, %r44, 5;
	add.s32 	%r50, %r49, 2123724318;
	xor.b32  	%r51, %r48, %r50;
	add.s32 	%r52, %r51, %r36;
	shl.b32 	%r53, %r52, 4;
	add.s32 	%r54, %r53, -1556008596;
	add.s32 	%r55, %r52, -626627285;
	shr.u32 	%r56, %r52, 5;
	add.s32 	%r57, %r56, -939442524;
	xor.b32  	%r58, %r54, %r55;
	xor.b32  	%r59, %r58, %r57;
	add.s32 	%r60, %r59, %r44;
	shl.b32 	%r61, %r60, 4;
	add.s32 	%r62, %r61, -1383041155;
	add.s32 	%r63, %r60, -626627285;
	xor.b32  	%r64, %r62, %r63;
	shr.u32 	%r65, %r60, 5;
	add.s32 	%r66, %r65, 2123724318;
	xor.b32  	%r67, %r64, %r66;
	add.s32 	%r68, %r67, %r52;
	shl.b32 	%r69, %r68, 4;
	add.s32 	%r70, %r69, -1556008596;
	add.s32 	%r71, %r68, 2027808484;
	shr.u32 	%r72, %r68, 5;
	add.s32 	%r73, %r72, -939442524;
	xor.b32  	%r74, %r70, %r71;
	xor.b32  	%r75, %r74, %r73;
	add.s32 	%r76, %r75, %r60;
	mad.lo.s32 	%r77, %r76, 1664525, 1013904223;
	and.b32  	%r78, %r77, 16777215;
	cvt.rn.f32.u32	%f101, %r78;
	mov.f32 	%f102, 0f4B800000;
	div.approx.ftz.f32 	%f103, %f101, %f102;
	mad.lo.s32 	%r6, %r77, 1664525, 1013904223;
	and.b32  	%r79, %r6, 16777215;
	cvt.rn.f32.u32	%f104, %r79;
	div.approx.ftz.f32 	%f105, %f104, %f102;
	cvt.u16.u32	%rs3, %r108;
	and.b16  	%rs4, %rs3, 255;
	cvt.rn.f64.u16	%fd6, %rs4;
	add.f64 	%fd7, %fd6, 0d3FE0000000000000;
	div.rn.f64 	%fd9, %fd7, %fd3;
	mov.f64 	%fd10, 0d0000000000000000;
	sub.f64 	%fd11, %fd10, %fd9;
	cvt.rn.ftz.f32.f64	%f106, %fd11;
	fma.rn.ftz.f32 	%f107, %f103, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f108, %f105, 0f40000000, 0fBF800000;
	add.ftz.f32 	%f34, %f107, %f29;
	add.ftz.f32 	%f175, %f108, %f106;
	setp.eq.ftz.f32	%p3, %f34, 0f00000000;
	setp.eq.ftz.f32	%p4, %f175, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.f32 	%f176, %f96;
	mov.f32 	%f177, %f96;
	@%p5 bra 	BB19_9;

	cvt.ftz.f64.f32	%fd12, %f34;
	abs.f64 	%fd13, %fd12;
	cvt.rn.ftz.f32.f64	%f109, %fd13;
	cvt.ftz.f64.f32	%fd14, %f175;
	abs.f64 	%fd15, %fd14;
	cvt.rn.ftz.f32.f64	%f110, %fd15;
	setp.gt.ftz.f32	%p6, %f109, %f110;
	@%p6 bra 	BB19_7;
	bra.uni 	BB19_6;

BB19_7:
	div.approx.ftz.f32 	%f112, %f175, %f34;
	mul.ftz.f32 	%f174, %f112, 0f3F490FDB;
	mov.f32 	%f175, %f34;
	bra.uni 	BB19_8;

BB19_6:
	div.approx.ftz.f32 	%f111, %f34, %f175;
	fma.rn.ftz.f32 	%f174, %f111, 0fBF490FDB, 0f3FC90FDB;

BB19_8:
	cos.approx.ftz.f32 	%f113, %f174;
	mul.ftz.f32 	%f176, %f175, %f113;
	sin.approx.ftz.f32 	%f114, %f174;
	mul.ftz.f32 	%f177, %f175, %f114;

BB19_9:
	add.u64 	%rd19, %SP, 0;
	add.u64 	%rd18, %SPL, 0;
	ld.const.f32 	%f165, [optixLaunchParams+32];
	ld.const.f32 	%f164, [optixLaunchParams+36];
	mov.u32 	%r86, 0;
	mul.ftz.f32 	%f124, %f16, %f176;
	fma.rn.ftz.f32 	%f125, %f124, %f65, %f91;
	fma.rn.ftz.f32 	%f126, %f124, %f66, %f92;
	fma.rn.ftz.f32 	%f127, %f124, %f67, %f165;
	mul.ftz.f32 	%f128, %f16, %f177;
	fma.rn.ftz.f32 	%f129, %f128, %f68, %f125;
	fma.rn.ftz.f32 	%f130, %f128, %f74, %f126;
	fma.rn.ftz.f32 	%f131, %f128, %f75, %f127;
	sub.ftz.f32 	%f132, %f19, %f129;
	sub.ftz.f32 	%f133, %f20, %f130;
	sub.ftz.f32 	%f134, %f22, %f131;
	mul.ftz.f32 	%f135, %f133, %f133;
	fma.rn.ftz.f32 	%f136, %f132, %f132, %f135;
	fma.rn.ftz.f32 	%f137, %f134, %f134, %f136;
	rsqrt.approx.ftz.f32 	%f138, %f137;
	mul.ftz.f32 	%f118, %f132, %f138;
	mul.ftz.f32 	%f119, %f133, %f138;
	mul.ftz.f32 	%f120, %f138, %f134;
	st.local.u32 	[%rd18+12], %r6;
	ld.global.f32 	%f139, [%rd2+4];
	fma.rn.ftz.f32 	%f115, %f139, %f164, %f129;
	fma.rn.ftz.f32 	%f116, %f139, %f70, %f130;
	fma.rn.ftz.f32 	%f117, %f139, %f71, %f131;
	shr.u64 	%rd10, %rd19, 32;
	cvt.u32.u64	%r87, %rd10;
	cvt.u32.u64	%r88, %rd19;
	mov.u32 	%r82, 255;
	mov.u32 	%r85, 2;
	mov.f32 	%f122, 0f60AD78EC;
	// inline asm
	call (%r80, %r81), _optix_trace_2, (%rd4, %f115, %f116, %f117, %f118, %f119, %f120, %f96, %f122, %f96, %r82, %r86, %r86, %r85, %r86, %r87, %r88);
	// inline asm
	ld.local.f32 	%f140, [%rd18];
	div.approx.ftz.f32 	%f141, %f140, %f23;
	add.ftz.f32 	%f178, %f178, %f141;
	ld.local.f32 	%f142, [%rd18+4];
	div.approx.ftz.f32 	%f143, %f142, %f23;
	add.ftz.f32 	%f179, %f179, %f143;
	ld.local.f32 	%f144, [%rd18+8];
	div.approx.ftz.f32 	%f145, %f144, %f23;
	add.ftz.f32 	%f180, %f180, %f145;
	add.s32 	%r108, %r108, 1;
	cvt.rn.f32.s32	%f170, %r108;
	setp.lt.ftz.f32	%p7, %f170, %f15;
	@%p7 bra 	BB19_4;

	add.s32 	%r107, %r107, 1;
	cvt.rn.f32.s32	%f166, %r107;
	setp.lt.ftz.f32	%p8, %f166, %f15;
	@%p8 bra 	BB19_3;

BB19_12:
	mul.ftz.f32 	%f161, %f178, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r98, %f161;
	mul.ftz.f32 	%f162, %f179, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r99, %f162;
	mul.ftz.f32 	%f163, %f180, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r100, %f163;
	shl.b32 	%r101, %r99, 8;
	shl.b32 	%r102, %r100, 16;
	or.b32  	%r103, %r98, %r101;
	or.b32  	%r104, %r103, %r102;
	or.b32  	%r105, %r104, -16777216;
	mad.lo.s32 	%r106, %r12, %r10, %r9;
	ld.const.u64 	%rd14, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd15, %rd14;
	mul.wide.u32 	%rd16, %r106, 4;
	add.s64 	%rd17, %rd15, %rd16;
	st.global.u32 	[%rd17], %r105;
	ret;
}


